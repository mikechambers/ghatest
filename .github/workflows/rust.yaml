name: Rust

on: [push]

jobs:

  build-linux-x86_64:
      runs-on: ubuntu-latest

      steps:
        #set some environement variables that we can use through the rest of our
        #action
        - name: Branch name
          id: branch_name
          run: |
            echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
            echo ::set-output name=TARGET_NAME::x86_64-unknown-linux-gnu

        - uses: actions/checkout@v2
        - uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            target: ${{ steps.branch_name.outputs.TARGET_NAME }}
            override: true
        - uses: actions-rs/cargo@v1
          env:
            DESTINY_API_KEY: ${{ secrets.DESTINY_API_KEY }}
          with:
            use-cross: true
            command: build
            args: --manifest-path=Cargo.toml --release --target ${{ steps.branch_name.outputs.TARGET_NAME }}

  build-windows-msvc:
    runs-on: windows-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:

      #set some environement variables that we can use through the rest of our
      #action
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TARGET_NAME::x86_64-pc-windows-msvc
        shell: bash

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.branch_name.outputs.TARGET_NAME }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          DESTINY_API_KEY: ${{ secrets.DESTINY_API_KEY }}
        with:
          use-cross: true
          command: build
          args: --manifest-path=Cargo.toml --release --target ${{ steps.branch_name.outputs.TARGET_NAME }}
      - name: Build
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          TARGET_NAME: ${{ steps.branch_name.outputs.TARGET_NAME }}
        run: echo SOURCE_TAG ${SOURCE_TAG} && ls -l target/${TARGET_NAME}/release/ && strip target/${TARGET_NAME}/release/ghatest.exe
        shell: bash
      - name: Zip
        run: Compress-Archive -Path target\${{ steps.branch_name.outputs.TARGET_NAME }}\release\ghatest.exe -DestinationPath dcli_${{ steps.branch_name.outputs.TARGET_NAME }}_${{ steps.branch_name.outputs.SOURCE_TAG }}.zip -CompressionLevel Optimal
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dcli_${{ steps.branch_name.outputs.TARGET_NAME }}_${{ steps.branch_name.outputs.SOURCE_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac-x86_64:
    runs-on: macos-10.15
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:

      #set some environement variables that we can use through the rest of our
      #action
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TARGET_NAME::x86_64-apple-darwin

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.branch_name.outputs.TARGET_NAME }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          DESTINY_API_KEY: ${{ secrets.DESTINY_API_KEY }}
        with:
          use-cross: true
          command: build
          args: --manifest-path=Cargo.toml --release --target ${{ steps.branch_name.outputs.TARGET_NAME }}
      - name: Build
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          TARGET_NAME: ${{ steps.branch_name.outputs.TARGET_NAME }}
        run: echo SOURCE_TAG ${SOURCE_TAG} && ls -l target/${TARGET_NAME}/release/ && strip target/${TARGET_NAME}/release/ghatest && zip -j dcli_${TARGET_NAME}_${SOURCE_TAG}.zip target/${TARGET_NAME}/release/ghatest
        
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dcli_${{ steps.branch_name.outputs.TARGET_NAME }}_${{ steps.branch_name.outputs.SOURCE_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}