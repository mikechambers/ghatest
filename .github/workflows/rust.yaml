name: Rust

on: [push]

jobs:

  build-linux:
    runs-on: ubuntu-latest

    steps:

      #set some environement variables that we can use through the rest of our
      #action
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=TARGET_NAME::x86_64-unknown-linux-musl

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.branch_name.outputs.TARGET_NAME }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ steps.branch_name.outputs.TARGET_NAME }}
      - name: Build
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          TARGET_NAME: ${{ steps.branch_name.outputs.TARGET_NAME }}
        run: strip target/${TARGET_NAME}/release/ghatest && zip -j target/${TARGET_NAME}/release/ghatest_${TARGET_NAME}_$SOURCE_TAG.zip target/${TARGET_NAME}/release/ghatest && ls -l target/${TARGET_NAME}/release/
        
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/${{ steps.branch_name.outputs.TARGET_NAME }}/release/ghatest_${{ steps.branch_name.outputs.TARGET_NAME }}_${{ steps.branch_name.outputs.SOURCE_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
